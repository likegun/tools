#!/usr/bin/env node
'use strict'
const inquirer = require('inquirer');
const _ = require('lodash');

const category = {
    title: null,
    key: '',
    value: []
};

function pbcopy(data) {
    var proc = require('child_process').spawn('pbcopy'); 
    proc.stdin.write(data); proc.stdin.end();
}

function transfer(titleContent ,docContent) {
    const doc = docContent.split('\n')
        .filter(e => e)
        .map(row => row.split(/\s+/).filter(e => e))
        .reduce((doc, row) => {
            doc[row[1]] = row[0];
            return doc;
        }, {});
    return titleContent.split('\n')
        .filter(e => e)
        .map(line => line.split(/\s+/).filter(e => e))
        .map(titles => 
            titles.map(title => {
                const categoryCopy = _.cloneDeep(category);
                _.set(categoryCopy, 'title', title);
                _.set(categoryCopy, 'key', 
                    _.get(doc, Object.keys(doc).find(key => key.includes(title)), '')
                );
                return categoryCopy;
            })
        );
}

(async () => {
    while(true) {
        try {
            const titleContent = (await inquirer.prompt([{
                type: 'editor',
                name: 'v',
                message: '输入所有title吧',
            }])).v;
            const docContent = (await inquirer.prompt([{
                type: 'editor',
                name: 'v',
                message: '输入字段对应关系',
            }])).v;
            
            pbcopy(JSON.stringify(transfer(titleContent, docContent), null, 2));
        } catch(e) {
            console.error(e);
        }
    }
})();